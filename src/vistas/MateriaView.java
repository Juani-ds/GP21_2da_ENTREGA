/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Materia;
import persistencia.MateriaData;

/**
 *
 * @author MSI
 */
public class MateriaView extends javax.swing.JInternalFrame {
    
    private MateriaData materiaData = new MateriaData();
    private List<Materia> listaMaterias;
    private int idMateriaSeleccionada = -1;
    
    
    public MateriaView() {
        initComponents();
        cargarMateriasEnTabla();
        cargarAniosEnComboBox();
        configurarEventoTabla();
        
    }
    
    private void configurarTabla() {
        jTableMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"ID", "Nombre", "Año", "Activa"}
        ) {
        public boolean isCellEditable(int row, int column) {
            return false;
        }
        });
    }
    
    private void cargarMateriasEnTabla() {
        listaMaterias = materiaData.listarMaterias();
        DefaultTableModel modelo = (DefaultTableModel) jTableMaterias.getModel();
        modelo.setRowCount(0);

        for (Materia m : listaMaterias) {
            modelo.addRow(new Object[]{
                m.getIdMateria(),
                m.getNombreMateria(),
                m.getAnio(),
                m.isEstado()? "Sí" : "No"
            });
        }
    }
    
    private void cargarAniosEnComboBox() {
        List<Materia> materias = materiaData.listarMaterias();
        Set<Integer> anios = new HashSet<>();

        for (Materia m : materias) {
        anios.add(m.getAnio());
        }
    }
        
        private void configurarEventoTabla() {
            jTableMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int filaSeleccionada = jTableMaterias.getSelectedRow();
                if (filaSeleccionada != -1) {
                    idMateriaSeleccionada = (int) jTableMaterias.getValueAt(filaSeleccionada, 0);  // Guardar ID
                    Materia materia = materiaData.buscarMateriaPorId(idMateriaSeleccionada);

                    if (materia != null) {
                        jTextNombre.setText(materia.getNombreMateria());
                        jComboBoxAnio.setSelectedItem(String.valueOf(materia.getAnio()));
                        jCheckBoxActivo.setSelected(materia.isEstado());
                    }
                }
            }
        });
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxAnio = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxActivo = new javax.swing.JRadioButton();
        btnModificar = new javax.swing.JButton();
        BtnRegistrar = new javax.swing.JButton();
        BtnBuscar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMaterias = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel1.setText("GESTION DE MATERIAS");

        jLabel2.setText("Nombre:");

        jTextNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNombreActionPerformed(evt);
            }
        });

        jLabel3.setText("Año:");

        jComboBoxAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBoxAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAnioActionPerformed(evt);
            }
        });

        jLabel4.setText("Activa:");

        jCheckBoxActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxActivoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        BtnRegistrar.setText("Registrar");
        BtnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistrarActionPerformed(evt);
            }
        });

        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });

        BtnEliminar.setText("Eliminar");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        jTableMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Materia", "Año"
            }
        ));
        jScrollPane2.setViewportView(jTableMaterias);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnRegistrar)
                        .addGap(12, 12, 12)
                        .addComponent(BtnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnEliminar))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jCheckBoxActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBoxAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBoxAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(23, 23, 23))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jCheckBoxActivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(btnModificar)
                        .addGap(27, 27, 27))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnRegistrar)
                    .addComponent(BtnBuscar)
                    .addComponent(BtnEliminar))
                .addGap(281, 281, 281))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNombreActionPerformed

    private void jComboBoxAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAnioActionPerformed

    private void jCheckBoxActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxActivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxActivoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            if (idMateriaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una materia de la tabla");
                return;
            }
            String nombre = jTextNombre.getText().trim();

            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la materia");
                return;
            }
            if (!nombre.matches("^[\\p{L}0-9 ]+$")) {
                JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras y números");
                return;
            }
            
            int anio = Integer.parseInt((String) jComboBoxAnio.getSelectedItem());
            boolean estado = jCheckBoxActivo.isSelected();
            Materia materiaActualizada = new Materia(idMateriaSeleccionada, nombre, anio, estado);
            materiaData.actualizarMateria(materiaActualizada);
            JOptionPane.showMessageDialog(this, "Materia actualizada correctamente");
            cargarMateriasEnTabla();
            limpiarCampos();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar materia: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void BtnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistrarActionPerformed
        try {
            String nombre = jTextNombre.getText().trim();
            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la materia");
                return;
            }
            if (!nombre.matches("^[\\p{L}0-9 ]+$")) {
                JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras y números");
                return;
            }
            
            int anio = Integer.parseInt((String) jComboBoxAnio.getSelectedItem());
            boolean estado = jCheckBoxActivo.isSelected();
            Materia nuevaMateria = new Materia(nombre, anio, estado);
            materiaData.insertarMateria(nuevaMateria);
            JOptionPane.showMessageDialog(this, "Materia registrada correctamente con ID: " + nuevaMateria.getIdMateria());
            cargarMateriasEnTabla();
            limpiarCampos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al registrar materia: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_BtnRegistrarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        try {
            if (idMateriaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una materia de la tabla");
                return;
            }
            Materia materia = materiaData.buscarMateriaPorId(idMateriaSeleccionada);
            if (materia == null) {
                JOptionPane.showMessageDialog(this, "La materia seleccionada no existe");
                return;
            }

            int opcion = JOptionPane.showConfirmDialog(this, 
                "¿Está seguro que desea eliminar la materia '" + materia.getNombreMateria() + "'?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

            if (opcion == JOptionPane.YES_OPTION) {
                materiaData.eliminarMateria(idMateriaSeleccionada);
                JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");
                cargarMateriasEnTabla();
                limpiarCampos();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar materia: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
       try {
            String idStr = JOptionPane.showInputDialog(this, 
                "Ingrese el ID de la materia a buscar:", 
                "Buscar Materia", 
                JOptionPane.QUESTION_MESSAGE);
            if (idStr == null || idStr.trim().isEmpty()) {
                return; 
            }
            if (!idStr.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "El ID debe ser un número válido");
                return;
            }

            int id = Integer.parseInt(idStr);
            Materia materia = materiaData.buscarMateriaPorId(id);
            if (materia != null) {
                idMateriaSeleccionada = materia.getIdMateria();
                jTextNombre.setText(materia.getNombreMateria());
                jComboBoxAnio.setSelectedItem(String.valueOf(materia.getAnio()));
                jCheckBoxActivo.setSelected(materia.isEstado());
                JOptionPane.showMessageDialog(this, "Materia encontrada");
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró una materia con ID: " + id);
                limpiarCampos();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar materia: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_BtnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MateriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MateriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MateriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MateriaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MateriaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnRegistrar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JRadioButton jCheckBoxActivo;
    private javax.swing.JComboBox<String> jComboBoxAnio;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableMaterias;
    private javax.swing.JTextField jTextNombre;
    // End of variables declaration//GEN-END:variables


    
    
private void limpiarCampos() {
    idMateriaSeleccionada = -1;
    jTextNombre.setText("");
    jComboBoxAnio.setSelectedIndex(0);
    jCheckBoxActivo.setSelected(false);
    jTableMaterias.clearSelection();
}

}
